package com.demo.scaler.Tree;import java.util.LinkedList;import java.util.Queue;public class OddAndEvenLevels {    //Problem Description    //Given a binary tree of integers. Find the difference between the sum of nodes at odd level and sum of nodes at even level.    //    //NOTE: Consider the level of root node as 1.    //    //    //    //Problem Constraints    //1 <= Number of nodes in binary tree <= 100000    //    //0 <= node values <= 109    //    //    //    //Input Format    //First and only argument is a root node of the binary tree, A    //    //    //    //Output Format    //Return an integer denoting the difference between the sum of nodes at odd level and sum of nodes at even level.    //    //    //    //Example Input    //Input 1:    //    //        1    //      /   \    //     2     3    //    / \   / \    //   4   5 6   7    //  /    // 8    //Input 2:    //    //        1    //       / \    //      2   10    //       \    //        4    //    //    //Example Output    //Output 1:    //    // 10    //Output 2:    //    // -7    //    //    //Example Explanation    //Explanation 1:    //    // Sum of nodes at odd level = 23    // Sum of ndoes at even level = 13    //Explanation 2:    //    // Sum of nodes at odd level = 5    // Sum of ndoes at even level = 12    public static void main(String[] args) {    }    public int solve(TreeNode root) {        if (root == null) {            return 0;        }        Queue<TreeNode> queue = new LinkedList<>();        queue.offer(root);        boolean isOdd = true;        int oddSum = 0, evenSum = 0;        while (!queue.isEmpty()) {            int size = queue.size();            for (int i = 0; i < size; i++) {                TreeNode poll = queue.poll();                if (isOdd) {                    oddSum += poll.val;                    // System.out.println("Odd: " + poll.val);                } else {                    evenSum += poll.val;                    // System.out.println("Even: " + poll.val);                }                if (poll.left != null) {                    queue.offer(poll.left);                }                if (poll.right != null) {                    queue.offer(poll.right);                }            }            isOdd = !isOdd;        }        // System.out.println(oddSum - evenSum);        return oddSum - evenSum;    }    static class TreeNode {        int val;        TreeNode left;        TreeNode right;        TreeNode(int x) {            val = x;            left = null;            right = null;        }    }}